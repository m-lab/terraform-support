#
# Platform cluster certificate key. This is a key generated by kubeadm and used
# to encrypt cluster certificate data before it uploads it to the cluster as a
# Secret named "kubeadm-certs". Control plane machines will either write or read
# this secret in order to be able download the cluster certificate data when the
# control plan is being bootsrapped.
#
resource "google_secret_manager_secret" "platform-cluster-cert-key" {
  replication {
    automatic = true
  }

  secret_id = "platform-cluster-cert-key"
}

# The Cloud Build default service account needs permission to be able to
# actually create the secret.
resource "google_secret_manager_secret_iam_binding" "platform-cluster-cert-key-admin" {
  secret_id = google_secret_manager_secret.platform-cluster-cert-key.secret_id
  role      = "roles/secretmanager.secretManagerAdmin"
  members = [
    "serviceAccount:${data.google_project.project.number}@cloudbuild.gserviceaccount.com"
  ]
}

# TODO(kinkade): make control plane machines run as a unique service account,
# and only grant that service account access to this secret.
resource "google_secret_manager_secret_iam_binding" "platform-cluster-cert-key-manager" {
  secret_id = google_secret_manager_secret.platform-cluster-cert-key.secret_id
  role      = "roles/secretmanager.secretVersionManager"
  members = [
    "serviceAccount:${data.google_compute_default_service_account.default.email}"
  ]
}

# secretVersionManager allows all secret version operations _execpt_ accessing
# the secret. This allows the same service account to actually access the secret.
resource "google_secret_manager_secret_iam_binding" "platform-cluster-cert-key-accesor" {
  secret_id = google_secret_manager_secret.platform-cluster-cert-key.secret_id
  role      = "roles/secretmanager.secretAccessor"
  members = [
    "serviceAccount:${data.google_compute_default_service_account.default.email}"
  ]
}
